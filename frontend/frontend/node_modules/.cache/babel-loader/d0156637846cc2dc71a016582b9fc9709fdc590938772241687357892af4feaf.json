{"ast":null,"code":"var _jsxFileName = \"/Users/alymuhammadbjiani/wellsHack/frontend/frontend/src/components/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getPageLabel = pathname => {\n  // Map routes to human-readable page names\n  switch (pathname) {\n    case '/doc1':\n      return 'Setting up BlazeMeter';\n    case '/doc2':\n      return 'Setting up React';\n    case '/doc2/hooks':\n      return 'React Hooks';\n    case '/doc2/routing':\n      return 'React Routing';\n    case '/doc3':\n      return 'Integrating with Jira';\n    case '/doc3/automation':\n      return 'Jira Automation';\n    case '/doc4':\n      return 'Writing Effective Documentation';\n    case '/doc5':\n      return 'User Management';\n    case '/doc6':\n      return 'Security & Permissions';\n    case '/doc7':\n      return 'Onboarding New Team Members';\n    case '/doc8':\n      return 'Macros & Templates';\n    case '/doc9':\n      return 'FAQ & Troubleshooting';\n    default:\n      return 'Home';\n  }\n};\nconst Chatbot = () => {\n  _s();\n  const location = useLocation();\n  const [open, setOpen] = useState(false);\n  const [messages, setMessages] = useState([{\n    from: 'bot',\n    text: 'Hi! I can help explain the docs. Ask me anything.'\n  }]);\n  const [input, setInput] = useState('');\n  const [page, setPage] = useState(location.pathname);\n  const [pageLabel, setPageLabel] = useState(getPageLabel(location.pathname));\n\n  // Update page context when route changes, but keep messages\n  useEffect(() => {\n    setPage(location.pathname);\n    setPageLabel(getPageLabel(location.pathname));\n  }, [location.pathname]);\n\n  // Send message to backend (placeholder)\n  const handleSend = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    const newMessages = [...messages, {\n      from: 'user',\n      text: input,\n      page\n    }];\n    setMessages(newMessages);\n    setInput('');\n    // Example payload to backend\n    // const response = await fetch('/api/chat', {\n    //   method: 'POST',\n    //   headers: { 'Content-Type': 'application/json' },\n    //   body: JSON.stringify({\n    //     question: input,\n    //     page,\n    //     pageLabel,\n    //     conversation: newMessages\n    //   })\n    // });\n    // const data = await response.json();\n    // setMessages([...newMessages, { from: 'bot', text: data.answer }]);\n  };\n\n  // Reset chat\n  const handleReset = () => {\n    setMessages([{\n      from: 'bot',\n      text: `Hi! I can help explain the docs for \"${pageLabel}\". Ask me anything.`\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!open && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setOpen(true),\n      style: {\n        position: 'fixed',\n        bottom: 30,\n        right: 30,\n        borderRadius: '50%',\n        width: 60,\n        height: 60,\n        background: '#1976d2',\n        color: 'white',\n        fontSize: 30,\n        border: 'none',\n        boxShadow: '0 2px 8px rgba(0,0,0,0.2)',\n        cursor: 'pointer',\n        zIndex: 1000\n      },\n      \"aria-label\": \"Open chatbot\",\n      children: \"\\uD83D\\uDCAC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), open && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        bottom: 30,\n        right: 30,\n        width: 350,\n        height: 500,\n        background: 'white',\n        borderRadius: 12,\n        boxShadow: '0 2px 16px rgba(0,0,0,0.25)',\n        display: 'flex',\n        flexDirection: 'column',\n        zIndex: 1001\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '1rem',\n          borderBottom: '1px solid #eee',\n          background: '#1976d2',\n          color: 'white',\n          borderTopLeftRadius: 12,\n          borderTopRightRadius: 12,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Gemini Chatbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleReset,\n            style: {\n              background: 'white',\n              color: '#1976d2',\n              border: 'none',\n              borderRadius: 6,\n              padding: '2px 10px',\n              marginRight: 8,\n              cursor: 'pointer',\n              fontWeight: 600\n            },\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setOpen(false),\n            style: {\n              background: 'none',\n              border: 'none',\n              color: 'white',\n              fontSize: 20,\n              cursor: 'pointer'\n            },\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          padding: '1rem',\n          overflowY: 'auto',\n          background: '#f9f9f9'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: 13,\n            color: '#888',\n            marginBottom: 10\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Context: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: pageLabel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 10,\n            textAlign: msg.from === 'user' ? 'right' : 'left'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              display: 'inline-block',\n              background: msg.from === 'user' ? '#1976d2' : '#eee',\n              color: msg.from === 'user' ? 'white' : '#333',\n              borderRadius: 16,\n              padding: '8px 14px',\n              maxWidth: '80%',\n              wordBreak: 'break-word'\n            },\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSend,\n        style: {\n          display: 'flex',\n          borderTop: '1px solid #eee',\n          padding: '0.5rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: `Ask about ${pageLabel}...`,\n          style: {\n            flex: 1,\n            border: 'none',\n            outline: 'none',\n            padding: '0.5rem',\n            borderRadius: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            marginLeft: 8,\n            background: '#1976d2',\n            color: 'white',\n            border: 'none',\n            borderRadius: 8,\n            padding: '0.5rem 1rem',\n            cursor: 'pointer'\n          },\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"w4TVV1bwU865mjwdPcVbapMp7hc=\", false, function () {\n  return [useLocation];\n});\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","jsxDEV","_jsxDEV","getPageLabel","pathname","Chatbot","_s","location","open","setOpen","messages","setMessages","from","text","input","setInput","page","setPage","pageLabel","setPageLabel","handleSend","e","preventDefault","trim","newMessages","handleReset","children","onClick","style","position","bottom","right","borderRadius","width","height","background","color","fontSize","border","boxShadow","cursor","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","padding","borderBottom","borderTopLeftRadius","borderTopRightRadius","alignItems","justifyContent","marginRight","fontWeight","flex","overflowY","marginBottom","map","msg","i","textAlign","maxWidth","wordBreak","onSubmit","borderTop","type","value","onChange","target","placeholder","outline","marginLeft","_c","$RefreshReg$"],"sources":["/Users/alymuhammadbjiani/wellsHack/frontend/frontend/src/components/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst getPageLabel = (pathname) => {\r\n  // Map routes to human-readable page names\r\n  switch (pathname) {\r\n    case '/doc1': return 'Setting up BlazeMeter';\r\n    case '/doc2': return 'Setting up React';\r\n    case '/doc2/hooks': return 'React Hooks';\r\n    case '/doc2/routing': return 'React Routing';\r\n    case '/doc3': return 'Integrating with Jira';\r\n    case '/doc3/automation': return 'Jira Automation';\r\n    case '/doc4': return 'Writing Effective Documentation';\r\n    case '/doc5': return 'User Management';\r\n    case '/doc6': return 'Security & Permissions';\r\n    case '/doc7': return 'Onboarding New Team Members';\r\n    case '/doc8': return 'Macros & Templates';\r\n    case '/doc9': return 'FAQ & Troubleshooting';\r\n    default: return 'Home';\r\n  }\r\n};\r\n\r\nconst Chatbot = () => {\r\n  const location = useLocation();\r\n  const [open, setOpen] = useState(false);\r\n  const [messages, setMessages] = useState([\r\n    { from: 'bot', text: 'Hi! I can help explain the docs. Ask me anything.' }\r\n  ]);\r\n  const [input, setInput] = useState('');\r\n  const [page, setPage] = useState(location.pathname);\r\n  const [pageLabel, setPageLabel] = useState(getPageLabel(location.pathname));\r\n\r\n  // Update page context when route changes, but keep messages\r\n  useEffect(() => {\r\n    setPage(location.pathname);\r\n    setPageLabel(getPageLabel(location.pathname));\r\n  }, [location.pathname]);\r\n\r\n  // Send message to backend (placeholder)\r\n  const handleSend = async (e) => {\r\n    e.preventDefault();\r\n    if (!input.trim()) return;\r\n    const newMessages = [...messages, { from: 'user', text: input, page }];\r\n    setMessages(newMessages);\r\n    setInput('');\r\n    // Example payload to backend\r\n    // const response = await fetch('/api/chat', {\r\n    //   method: 'POST',\r\n    //   headers: { 'Content-Type': 'application/json' },\r\n    //   body: JSON.stringify({\r\n    //     question: input,\r\n    //     page,\r\n    //     pageLabel,\r\n    //     conversation: newMessages\r\n    //   })\r\n    // });\r\n    // const data = await response.json();\r\n    // setMessages([...newMessages, { from: 'bot', text: data.answer }]);\r\n  };\r\n\r\n  // Reset chat\r\n  const handleReset = () => {\r\n    setMessages([\r\n      { from: 'bot', text: `Hi! I can help explain the docs for \"${pageLabel}\". Ask me anything.` }\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!open && (\r\n        <button\r\n          onClick={() => setOpen(true)}\r\n          style={{\r\n            position: 'fixed',\r\n            bottom: 30,\r\n            right: 30,\r\n            borderRadius: '50%',\r\n            width: 60,\r\n            height: 60,\r\n            background: '#1976d2',\r\n            color: 'white',\r\n            fontSize: 30,\r\n            border: 'none',\r\n            boxShadow: '0 2px 8px rgba(0,0,0,0.2)',\r\n            cursor: 'pointer',\r\n            zIndex: 1000\r\n          }}\r\n          aria-label=\"Open chatbot\"\r\n        >\r\n          💬\r\n        </button>\r\n      )}\r\n      {open && (\r\n        <div\r\n          style={{\r\n            position: 'fixed',\r\n            bottom: 30,\r\n            right: 30,\r\n            width: 350,\r\n            height: 500,\r\n            background: 'white',\r\n            borderRadius: 12,\r\n            boxShadow: '0 2px 16px rgba(0,0,0,0.25)',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            zIndex: 1001\r\n          }}\r\n        >\r\n          <div style={{ padding: '1rem', borderBottom: '1px solid #eee', background: '#1976d2', color: 'white', borderTopLeftRadius: 12, borderTopRightRadius: 12, display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n            <span>Gemini Chatbot</span>\r\n            <div>\r\n              <button onClick={handleReset} style={{ background: 'white', color: '#1976d2', border: 'none', borderRadius: 6, padding: '2px 10px', marginRight: 8, cursor: 'pointer', fontWeight: 600 }}>Reset</button>\r\n              <button onClick={() => setOpen(false)} style={{ background: 'none', border: 'none', color: 'white', fontSize: 20, cursor: 'pointer' }}>&times;</button>\r\n            </div>\r\n          </div>\r\n          <div style={{ flex: 1, padding: '1rem', overflowY: 'auto', background: '#f9f9f9' }}>\r\n            <div style={{ fontSize: 13, color: '#888', marginBottom: 10 }}>\r\n              <span>Context: <b>{pageLabel}</b></span>\r\n            </div>\r\n            {messages.map((msg, i) => (\r\n              <div key={i} style={{ marginBottom: 10, textAlign: msg.from === 'user' ? 'right' : 'left' }}>\r\n                <span style={{\r\n                  display: 'inline-block',\r\n                  background: msg.from === 'user' ? '#1976d2' : '#eee',\r\n                  color: msg.from === 'user' ? 'white' : '#333',\r\n                  borderRadius: 16,\r\n                  padding: '8px 14px',\r\n                  maxWidth: '80%',\r\n                  wordBreak: 'break-word'\r\n                }}>{msg.text}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <form onSubmit={handleSend} style={{ display: 'flex', borderTop: '1px solid #eee', padding: '0.5rem' }}>\r\n            <input\r\n              type=\"text\"\r\n              value={input}\r\n              onChange={e => setInput(e.target.value)}\r\n              placeholder={`Ask about ${pageLabel}...`}\r\n              style={{ flex: 1, border: 'none', outline: 'none', padding: '0.5rem', borderRadius: 8 }}\r\n            />\r\n            <button type=\"submit\" style={{ marginLeft: 8, background: '#1976d2', color: 'white', border: 'none', borderRadius: 8, padding: '0.5rem 1rem', cursor: 'pointer' }}>Send</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}